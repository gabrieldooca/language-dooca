{
    ".liquid": {
        "Liquid tag": {
            "prefix": "ltag",
            "body": "{{ ${1} }}"
        },
        "Liquid ajax": {
            "prefix": "ajax",
            "body": "{% ajax ${1} %}\n${2}\n{% endajax %}"
        },
        "Liquid schema": {
            "prefix": "schema",
            "body": "{% schema %}\n\t{\n\t\t\"name\": \"${1}\",\n\t\t\"category\": \"${2}\",\n\t\t\"settings\": [${3}],\n\t\t\"blocks\": [${4}]\n\n\t}\n{% endschema %}"
        },
        "Liquid img tag": {
            "prefix": "imgt",
            "body": "{{ '${1}' | img_url${2} | img_tag }}"
        },
        "Liquid img crop": {
            "prefix": "imgc",
            "body": "{{ '${1}' | img_url:'${2}+crop_center' }}"
        },
        "Liquid img url": {
            "prefix": "imgu",
            "body": "{{ '${1}' | img_url${2} }}"
        },
        "Liquid script (local)": {
            "prefix": "jsloc",
            "body": "{{ '${1}' | ${2}assets_url | script_tag }}"
        },
        "Liquid script (remote)": {
            "prefix": "jsrem",
            "body": "{{ '${1}' | script_tag }}"
        },
        "Liquid script append (local)": {
            "prefix": "jsapploc",
            "body": "{{ '${1}' | ${2}assets_url | script_append }}"
        },
        "Liquid script append (remote)": {
            "prefix": "jsapprem",
            "body": "{{ '${1}' | script_append }}"
        },
        "Liquid stylesheet (local)": {
            "prefix": "cssloc",
            "body": "{{ '${1}' | ${2}assets_url | stylesheet_tag }}"
        },
        "Liquid stylesheet (remote)": {
            "prefix": "cssrem",
            "body": "{{ '${1}' | stylesheet_tag }}"
        },
        "Liquid stylesheet append (local)": {
            "prefix": "csaploc",
            "body": "{{ '${1}' | ${2}assets_url | stylesheet_append }}"
        },
        "Liquid stylesheet append (remote)": {
            "prefix": "csaprem",
            "body": "{{ '${1}' | stylesheet_append }}"
        },
        "Liquid section": {
            "prefix": "sec",
            "body": "{% section '${1}' %}"
        },
        "Liquid include with": {
            "prefix": "incwith",
            "body": "{% include '${1}' with ${2} %}"
        },
        "Liquid include": {
            "prefix": "inc",
            "body": "{% include '${1}' %}"
        },
        "Liquid capture": {
            "prefix": "cap",
            "body": "{% capture ${1} %}\n${2}\n{% endcapture %}"
        },
        "Liquid assign": {
            "prefix": "ass",
            "body": "{% assign ${1} = ${2} %}"
        },
        "Liquid for": {
            "prefix": "for",
            "body": "{% for ${1} in ${2} %}\n\t${3}\n{% endfor %}"
        },
        "Liquid cycle": {
            "prefix": "cycle",
            "body": "{% cycle '${1}' %}"
        },
        "Liquid case": {
            "prefix": "case",
            "body": "{% case ${1} %}\n\t{% when ${2} %}\n\t\t${3}\n\t{% else %}\n\t\t${4}\n{% endcase %}"
        },
        "Liquid unless (inline)": {
            "prefix": "unlin",
            "body": "{% unless ${1} %}${2}{% endunless %}"
        },
        "Liquid unless": {
            "prefix": "unl",
            "body": "{% unless ${1} %}\n\t${2}\n{% endunless %}"
        },
        "Liquid if / elseif": {
            "prefix": "ifelif",
            "body": "{% if ${1} %}\n\t${2}\n{% elsif ${3} %}\n\t${4}\n{% endif %}"
        },
        "Liquid if": {
            "prefix": "if",
            "body": "{% if ${1} %}\n\t${2}\n{% endif %}"
        },
        "Liquid comment": {
            "prefix": "com",
            "body": "{% comment %}\n\t${1}\n{% endcomment %}"
        },
        "Liquid filter assets_url": {
            "prefix": "assurl",
            "description": "return url assets theme",
            "body": "| assets_url"
        },
        "Liquid filter dc_assets_url": {
            "prefix": "assurldc",
            "description": "return url assets global Dooca",
            "body": "| dc_assets_url"
        },
        "Liquid filter static_assets_url": {
            "prefix": "assurlst",
            "description": "return url assets static Dooca",
            "body": "| static_assets_url"
        },
        "Liquid filter svg": {
            "prefix": "svg",
            "description": "return content svg file",
            "body": "| svg"
        },
        "Liquid filter currency": {
            "prefix": "currency",
            "description": "format number in currency, option prepend, e.g. {{ 2000 | append }} #=> 'R$ 20,00', e.g. {{ 2000 | append:false }} #=> '20,00'",
            "body": "| currency"
        },
        "Liquid filter append": {
            "prefix": "app",
            "description": "append a string e.g. {{ 'foo' | append:'bar' }} #=> 'foobar'",
            "body": "| append:'${1}'"
        },
        "Liquid filter capitalize": {
            "prefix": "cap",
            "description": "capitalize words in the input sentence",
            "body": "| capitalize"
        },
        "Liquid filter date format": {
            "prefix": "date",
            "description": "format a date, sintaxe reference php",
            "body": "| date:'${1}'"
        },
        "Liquid filter divided_by": {
            "prefix": "divided_by",
            "description": "division e.g {{ 10 | divided_by:2 }} #=> 5",
            "body": "| divided_by:${1}"
        },
        "Liquid filter downcase": {
            "prefix": "downcase",
            "description": "convert an input string to lowercase",
            "body": "| downcase"
        },
        "Liquid filter escape": {
            "prefix": "escape",
            "description": "escape a string",
            "body": "| escape"
        },
        "Liquid filter escape_once": {
            "prefix": "escape_once",
            "description": "returns an escaped version of html without affecting existing escaped entities",
            "body": "| escape_once"
        },
        "Liquid filter first": {
            "prefix": "first",
            "description": "get the first element of the passed in array",
            "body": "| first"
        },
        "Liquid filter join": {
            "prefix": "join",
            "description": "join elements of the array with certain character between them",
            "body": "| join"
        },
        "Liquid filter last": {
            "prefix": "last",
            "description": "get the last element of the passed in array",
            "body": "| last"
        },
        "Liquid filter map": {
            "prefix": "map",
            "description": "map/collect an array on a given property",
            "body": "| map"
        },
        "Liquid filter minus": {
            "prefix": "minus",
            "description": "subtraction e.g {{ 4 | minus:2 }} #=> 2",
            "body": "| minus:${1}"
        },
        "Liquid filter newline_to_br": {
            "prefix": "newline_to_br",
            "description": "replace each newline with html break",
            "body": "| newline_to_br"
        },
        "Liquid filter plus": {
            "prefix": "plus",
            "description": "addition e.g {{ '1' | plus:'1' }} #=> '11', {{ 1 | plus:1 }} #=> 2",
            "body": "| plus:${1}"
        },
        "Liquid filter prepend": {
            "prefix": "prepend",
            "description": "prepend a string e.g. {{ 'bar' | prepend:'foo' }} #=> 'foobar'",
            "body": "| prepend:'${1}'"
        },
        "Liquid filter replace": {
            "prefix": "replace",
            "description": "replace each occurrence e.g. {{ 'foofoo' | replace:'foo','bar' }} #=> 'barbar'",
            "body": "| replace:'${1}','${2}'"
        },
        "Liquid filter replace_first": {
            "prefix": "replace_first",
            "description": "replace the first occurrence e.g. {{ 'barbar' | replace_first:'bar','foo' }} #=> 'foobar'",
            "body": "| replace_first:'${1}','${2}'"
        },
        "Liquid filter remove": {
            "prefix": "remove",
            "description": "remove each occurrence e.g. {{ 'foobarfoobar' | remove:'foo' }} #=> 'barbar'",
            "body": "| remove:'${1}'"
        },
        "Liquid filter remove_first": {
            "prefix": "remove_first",
            "description": "remove the first occurrence e.g. {{ 'barbar' | remove_first:'bar' }} #=> 'bar'",
            "body": "| remove_first:'${1}'"
        },
        "Liquid filter size": {
            "prefix": "size",
            "description": "return the size of an array or string",
            "body": "| size"
        },
        "Liquid filter sort": {
            "prefix": "sort",
            "description": "sort elements of the array",
            "body": "| sort"
        },
        "Liquid filter strip_html": {
            "prefix": "strip_html",
            "description": "strip html from string",
            "body": "| strip_html"
        },
        "Liquid filter strip_newlines": {
            "prefix": "strip_newlines",
            "description": "strip all newlines from string",
            "body": "| strip_newlines"
        },
        "Liquid filter times": {
            "prefix": "times",
            "description": "multiplication e.g {{ 'foo' | times:4 }} #=> 'foofoofoofoo', {{ 5 | times:4 }} #=> 20",
            "body": "| times:${1}"
        },
        "Liquid filter truncate": {
            "prefix": "truncate",
            "description": "truncate a string down to x characters",
            "body": "| truncate:${1}"
        },
        "Liquid filter truncatewords": {
            "prefix": "truncatewords",
            "description": "truncate a string down to x words",
            "body": "| truncatewords:${1}"
        },
        "Liquid filter upcase": {
            "prefix": "upcase",
            "description": "convert an input string to uppercase",
            "body": "| upcase"
        }
    }
}
